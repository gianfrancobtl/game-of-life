        -:    0:Source:/Users/gianbattolla/Documents/Año 2020 - Cs. de la computación/Algoritmos y Estructuras de Datos 1/Trabajo Practico de Implementación - Juego de la Vida-20201031/tpi_final/tests/EJ01_toroideValidoTEST.cpp
        -:    0:Graph:/Users/gianbattolla/Documents/Año 2020 - Cs. de la computación/Algoritmos y Estructuras de Datos 1/Trabajo Practico de Implementación - Juego de la Vida-20201031/tpi_final/cmake-build-debug/CMakeFiles/juegoDeLaVida.dir/tests/EJ01_toroideValidoTEST.gcno
        -:    0:Data:/Users/gianbattolla/Documents/Año 2020 - Cs. de la computación/Algoritmos y Estructuras de Datos 1/Trabajo Practico de Implementación - Juego de la Vida-20201031/tpi_final/cmake-build-debug/CMakeFiles/juegoDeLaVida.dir/tests/EJ01_toroideValidoTEST.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "../ejercicios.h"
        -:    2:#include "gtest/gtest.h"
        -:    3:
        -:    4:using namespace std;
        -:    5:
        7:    6:TEST(toroideValidoTEST, toroideVacio){
        1:    6-block  0
        1:    6-block  1
        1:    6-block  2
        1:    6-block  3
        1:    6-block  4
        1:    6-block  5
        1:    6-block  6
    $$$$$:    6-block  7
    $$$$$:    6-block  8
    $$$$$:    6-block  9
    $$$$$:    6-block 10
    $$$$$:    6-block 11
    $$$$$:    6-block 12
        1:    6-block 13
        1:    6-block 14
        1:    6-block 15
        1:    6-block 16
        1:    6-block 17
        1:    6-block 18
        1:    6-block 19
        1:    6-block 20
        1:    7:    toroide t = { vector<bool> () };
        1:    7-block  0
        1:    7-block  1
        1:    7-block  2
    $$$$$:    7-block  3
    $$$$$:    7-block  4
    $$$$$:    7-block  5
    $$$$$:    7-block  6
        1:    8:    EXPECT_FALSE(toroideValido(t));
        1:    8-block  0
        1:    8-block  1
        1:    8-block  2
        1:    8-block  3
        1:    8-block  4
    $$$$$:    8-block  5
    $$$$$:    8-block  6
    $$$$$:    8-block  7
    $$$$$:    8-block  8
    $$$$$:    8-block  9
    $$$$$:    8-block 10
    $$$$$:    8-block 11
    $$$$$:    8-block 12
    $$$$$:    8-block 13
        1:    9:}
    $$$$$:    9-block  0
    $$$$$:    9-block  1
    $$$$$:    9-block  2
    $$$$$:    9-block  3
        1:    9-block  4
    $$$$$:    9-block  5
        -:   10:
        7:   11:TEST(toroideValidoTEST, toroideVacio5Filas){
        1:   11-block  0
        1:   11-block  1
        1:   11-block  2
        1:   11-block  3
        1:   11-block  4
        1:   11-block  5
        1:   11-block  6
    $$$$$:   11-block  7
    $$$$$:   11-block  8
    $$$$$:   11-block  9
    $$$$$:   11-block 10
    $$$$$:   11-block 11
    $$$$$:   11-block 12
        1:   11-block 13
        1:   11-block 14
        1:   11-block 15
        1:   11-block 16
        1:   11-block 17
        1:   11-block 18
        1:   11-block 19
        1:   11-block 20
        1:   12:    vector<bool> vacio;
        5:   13:    toroide t = { vacio, vacio, vacio, vacio, vacio };
        1:   13-block  0
        1:   13-block  1
        1:   13-block  2
        1:   13-block  3
        1:   13-block  4
        1:   13-block  5
        1:   13-block  6
        5:   13-block  7
    $$$$$:   13-block  8
    $$$$$:   13-block  9
    $$$$$:   13-block 10
    $$$$$:   13-block 11
    $$$$$:   13-block 12
    $$$$$:   13-block 13
        1:   14:    EXPECT_FALSE(toroideValido(t));
        1:   14-block  0
        1:   14-block  1
        1:   14-block  2
        1:   14-block  3
        1:   14-block  4
    $$$$$:   14-block  5
    $$$$$:   14-block  6
    $$$$$:   14-block  7
    $$$$$:   14-block  8
    $$$$$:   14-block  9
    $$$$$:   14-block 10
    $$$$$:   14-block 11
    $$$$$:   14-block 12
    $$$$$:   14-block 13
        1:   15:}
    $$$$$:   15-block  0
    $$$$$:   15-block  1
    $$$$$:   15-block  2
    $$$$$:   15-block  3
        1:   15-block  4
    $$$$$:   15-block  5
    $$$$$:   15-block  6
    $$$$$:   15-block  7
        -:   16:
        7:   17:TEST(toroideValidoTEST, diagonalTresPorTres) {
        1:   17-block  0
        1:   17-block  1
        1:   17-block  2
        1:   17-block  3
        1:   17-block  4
        1:   17-block  5
        1:   17-block  6
    $$$$$:   17-block  7
    $$$$$:   17-block  8
    $$$$$:   17-block  9
    $$$$$:   17-block 10
    $$$$$:   17-block 11
    $$$$$:   17-block 12
        1:   17-block 13
        1:   17-block 14
        1:   17-block 15
        1:   17-block 16
        1:   17-block 17
        1:   17-block 18
        1:   17-block 19
        1:   17-block 20
        3:   18:    toroide t = { {true, false, false},
        1:   18-block  0
        1:   18-block  1
        1:   18-block  2
        3:   18-block  3
    $$$$$:   18-block  4
    $$$$$:   18-block  5
    $$$$$:   18-block  6
    $$$$$:   18-block  7
    $$$$$:   18-block  8
    $$$$$:   18-block  9
    $$$$$:   18-block 10
        1:   19:                  {false, true, false},
        1:   19-block  0
        1:   20:                  {false, false, true}
        1:   20-block  0
        -:   21:    };
        1:   22:    EXPECT_TRUE(toroideValido(t));
        1:   22-block  0
        1:   22-block  1
        1:   22-block  2
        1:   22-block  3
        1:   22-block  4
    $$$$$:   22-block  5
    $$$$$:   22-block  6
    $$$$$:   22-block  7
    $$$$$:   22-block  8
    $$$$$:   22-block  9
    $$$$$:   22-block 10
    $$$$$:   22-block 11
    $$$$$:   22-block 12
    $$$$$:   22-block 13
        1:   23:}
    $$$$$:   23-block  0
    $$$$$:   23-block  1
    $$$$$:   23-block  2
    $$$$$:   23-block  3
        1:   23-block  4
    $$$$$:   23-block  5
