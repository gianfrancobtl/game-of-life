        -:    0:Source:/Users/gianbattolla/Documents/Año 2020 - Cs. de la computación/Algoritmos y Estructuras de Datos 1/Trabajo Practico de Implementación - Juego de la Vida-20201031/tpi_final/tests/EJ01_toroideValidoTEST.cpp
        -:    0:Graph:/Users/gianbattolla/Documents/Año 2020 - Cs. de la computación/Algoritmos y Estructuras de Datos 1/Trabajo Practico de Implementación - Juego de la Vida-20201031/tpi_final/cmake-build-debug/CMakeFiles/juegoDeLaVida.dir/tests/EJ01_toroideValidoTEST.gcno
        -:    0:Data:/Users/gianbattolla/Documents/Año 2020 - Cs. de la computación/Algoritmos y Estructuras de Datos 1/Trabajo Practico de Implementación - Juego de la Vida-20201031/tpi_final/cmake-build-debug/CMakeFiles/juegoDeLaVida.dir/tests/EJ01_toroideValidoTEST.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "../ejercicios.h"
        -:    2:#include "gtest/gtest.h"
        -:    3:
        -:    4:using namespace std;
        -:    5:
        7:    6:TEST(toroideValidoTEST, toroideVacio){
        1:    6-block  0
        1:    6-block  1
        1:    6-block  2
        1:    6-block  3
        1:    6-block  4
        1:    6-block  5
        1:    6-block  6
    $$$$$:    6-block  7
    $$$$$:    6-block  8
    $$$$$:    6-block  9
    $$$$$:    6-block 10
    $$$$$:    6-block 11
    $$$$$:    6-block 12
        1:    6-block 13
        1:    6-block 14
        1:    6-block 15
        1:    6-block 16
        1:    6-block 17
        1:    6-block 18
        1:    6-block 19
        1:    6-block 20
        1:    7:    toroide t = { vector<bool> () };
        1:    7-block  0
        1:    7-block  1
        1:    7-block  2
    $$$$$:    7-block  3
    $$$$$:    7-block  4
    $$$$$:    7-block  5
    $$$$$:    7-block  6
        1:    8:    EXPECT_FALSE(toroideValido(t));
        1:    8-block  0
        1:    8-block  1
        1:    8-block  2
        1:    8-block  3
        1:    8-block  4
    $$$$$:    8-block  5
    $$$$$:    8-block  6
    $$$$$:    8-block  7
    $$$$$:    8-block  8
    $$$$$:    8-block  9
    $$$$$:    8-block 10
    $$$$$:    8-block 11
    $$$$$:    8-block 12
    $$$$$:    8-block 13
        1:    9:}
    $$$$$:    9-block  0
    $$$$$:    9-block  1
    $$$$$:    9-block  2
    $$$$$:    9-block  3
        1:    9-block  4
    $$$$$:    9-block  5
        -:   10:
        7:   11:TEST(toroideValidoTEST, toroideVacio5Filas){
        1:   11-block  0
        1:   11-block  1
        1:   11-block  2
        1:   11-block  3
        1:   11-block  4
        1:   11-block  5
        1:   11-block  6
    $$$$$:   11-block  7
    $$$$$:   11-block  8
    $$$$$:   11-block  9
    $$$$$:   11-block 10
    $$$$$:   11-block 11
    $$$$$:   11-block 12
        1:   11-block 13
        1:   11-block 14
        1:   11-block 15
        1:   11-block 16
        1:   11-block 17
        1:   11-block 18
        1:   11-block 19
        1:   11-block 20
        1:   12:    vector<bool> vacio;
        5:   13:    toroide t = { vacio, vacio, vacio, vacio, vacio };
        1:   13-block  0
        1:   13-block  1
        1:   13-block  2
        1:   13-block  3
        1:   13-block  4
        1:   13-block  5
        1:   13-block  6
        5:   13-block  7
    $$$$$:   13-block  8
    $$$$$:   13-block  9
    $$$$$:   13-block 10
    $$$$$:   13-block 11
    $$$$$:   13-block 12
    $$$$$:   13-block 13
        1:   14:    EXPECT_FALSE(toroideValido(t));
        1:   14-block  0
        1:   14-block  1
        1:   14-block  2
        1:   14-block  3
        1:   14-block  4
    $$$$$:   14-block  5
    $$$$$:   14-block  6
    $$$$$:   14-block  7
    $$$$$:   14-block  8
    $$$$$:   14-block  9
    $$$$$:   14-block 10
    $$$$$:   14-block 11
    $$$$$:   14-block 12
    $$$$$:   14-block 13
        1:   15:}
    $$$$$:   15-block  0
    $$$$$:   15-block  1
    $$$$$:   15-block  2
    $$$$$:   15-block  3
        1:   15-block  4
    $$$$$:   15-block  5
    $$$$$:   15-block  6
    $$$$$:   15-block  7
        -:   16:
        7:   17:TEST(toroideValidoTEST, diagonalTresPorTres) {
        1:   17-block  0
        1:   17-block  1
        1:   17-block  2
        1:   17-block  3
        1:   17-block  4
        1:   17-block  5
        1:   17-block  6
    $$$$$:   17-block  7
    $$$$$:   17-block  8
    $$$$$:   17-block  9
    $$$$$:   17-block 10
    $$$$$:   17-block 11
    $$$$$:   17-block 12
        1:   17-block 13
        1:   17-block 14
        1:   17-block 15
        1:   17-block 16
        1:   17-block 17
        1:   17-block 18
        1:   17-block 19
        1:   17-block 20
        3:   18:    toroide t = { {true, false, false},
        1:   18-block  0
        1:   18-block  1
        1:   18-block  2
        3:   18-block  3
    $$$$$:   18-block  4
    $$$$$:   18-block  5
    $$$$$:   18-block  6
    $$$$$:   18-block  7
    $$$$$:   18-block  8
    $$$$$:   18-block  9
    $$$$$:   18-block 10
        1:   19:                  {false, true, false},
        1:   19-block  0
        1:   20:                  {false, false, true}
        1:   20-block  0
        -:   21:    };
        1:   22:    EXPECT_TRUE(toroideValido(t));
        1:   22-block  0
        1:   22-block  1
        1:   22-block  2
        1:   22-block  3
        1:   22-block  4
    $$$$$:   22-block  5
    $$$$$:   22-block  6
    $$$$$:   22-block  7
    $$$$$:   22-block  8
    $$$$$:   22-block  9
    $$$$$:   22-block 10
    $$$$$:   22-block 11
    $$$$$:   22-block 12
    $$$$$:   22-block 13
        1:   23:}
    $$$$$:   23-block  0
    $$$$$:   23-block  1
    $$$$$:   23-block  2
    $$$$$:   23-block  3
        1:   23-block  4
    $$$$$:   23-block  5
        -:   24:
        7:   25:TEST(toroideValidoTEST, noRectangulo) {
        1:   25-block  0
        1:   25-block  1
        1:   25-block  2
        1:   25-block  3
        1:   25-block  4
        1:   25-block  5
        1:   25-block  6
    $$$$$:   25-block  7
    $$$$$:   25-block  8
    $$$$$:   25-block  9
    $$$$$:   25-block 10
    $$$$$:   25-block 11
    $$$$$:   25-block 12
        1:   25-block 13
        1:   25-block 14
        1:   25-block 15
        1:   25-block 16
        1:   25-block 17
        1:   25-block 18
        1:   25-block 19
        1:   25-block 20
        3:   26:    toroide t = { {true, false, false},
        1:   26-block  0
        1:   26-block  1
        1:   26-block  2
        3:   26-block  3
    $$$$$:   26-block  4
    $$$$$:   26-block  5
    $$$$$:   26-block  6
    $$$$$:   26-block  7
    $$$$$:   26-block  8
    $$$$$:   26-block  9
    $$$$$:   26-block 10
        1:   27:                  {false, true, true , false},
        1:   27-block  0
        1:   28:                  {false, false, true}
        1:   28-block  0
        -:   29:    };
        1:   30:    EXPECT_FALSE(toroideValido(t));
        1:   30-block  0
        1:   30-block  1
        1:   30-block  2
        1:   30-block  3
        1:   30-block  4
    $$$$$:   30-block  5
    $$$$$:   30-block  6
    $$$$$:   30-block  7
    $$$$$:   30-block  8
    $$$$$:   30-block  9
    $$$$$:   30-block 10
    $$$$$:   30-block 11
    $$$$$:   30-block 12
    $$$$$:   30-block 13
        1:   31:}
    $$$$$:   31-block  0
    $$$$$:   31-block  1
    $$$$$:   31-block  2
    $$$$$:   31-block  3
        1:   31-block  4
    $$$$$:   31-block  5
        -:   32:
        7:   33:TEST(toroideValidoTEST, Menor3Columnas) {
        1:   33-block  0
        1:   33-block  1
        1:   33-block  2
        1:   33-block  3
        1:   33-block  4
        1:   33-block  5
        1:   33-block  6
    $$$$$:   33-block  7
    $$$$$:   33-block  8
    $$$$$:   33-block  9
    $$$$$:   33-block 10
    $$$$$:   33-block 11
    $$$$$:   33-block 12
        1:   33-block 13
        1:   33-block 14
        1:   33-block 15
        1:   33-block 16
        1:   33-block 17
        1:   33-block 18
        1:   33-block 19
        1:   33-block 20
        3:   34:    toroide t = { {true, false},
        1:   34-block  0
        1:   34-block  1
        1:   34-block  2
        3:   34-block  3
    $$$$$:   34-block  4
    $$$$$:   34-block  5
    $$$$$:   34-block  6
    $$$$$:   34-block  7
    $$$$$:   34-block  8
    $$$$$:   34-block  9
    $$$$$:   34-block 10
        1:   35:                  {false, true},
        1:   35-block  0
        1:   36:                  {false, false}
        1:   36-block  0
        -:   37:    };
        1:   38:    EXPECT_FALSE(toroideValido(t));
        1:   38-block  0
        1:   38-block  1
        1:   38-block  2
        1:   38-block  3
        1:   38-block  4
    $$$$$:   38-block  5
    $$$$$:   38-block  6
    $$$$$:   38-block  7
    $$$$$:   38-block  8
    $$$$$:   38-block  9
    $$$$$:   38-block 10
    $$$$$:   38-block 11
    $$$$$:   38-block 12
    $$$$$:   38-block 13
        1:   39:}
    $$$$$:   39-block  0
    $$$$$:   39-block  1
    $$$$$:   39-block  2
    $$$$$:   39-block  3
        1:   39-block  4
    $$$$$:   39-block  5
        -:   40:
        7:   41:TEST(toroideValidoTEST, Menor3Filas) {
        1:   41-block  0
        1:   41-block  1
        1:   41-block  2
        1:   41-block  3
        1:   41-block  4
        1:   41-block  5
        1:   41-block  6
    $$$$$:   41-block  7
    $$$$$:   41-block  8
    $$$$$:   41-block  9
    $$$$$:   41-block 10
    $$$$$:   41-block 11
    $$$$$:   41-block 12
        1:   41-block 13
        1:   41-block 14
        1:   41-block 15
        1:   41-block 16
        1:   41-block 17
        1:   41-block 18
        1:   41-block 19
        1:   41-block 20
        1:   42:    toroide t = { {true, false, false}
        1:   42-block  0
        1:   42-block  1
        1:   42-block  2
        1:   42-block  3
    $$$$$:   42-block  4
    $$$$$:   42-block  5
    $$$$$:   42-block  6
    $$$$$:   42-block  7
    $$$$$:   42-block  8
    $$$$$:   42-block  9
    $$$$$:   42-block 10
        -:   43:
        -:   44:    };
        1:   45:    EXPECT_FALSE(toroideValido(t));
        1:   45-block  0
        1:   45-block  1
        1:   45-block  2
        1:   45-block  3
        1:   45-block  4
    $$$$$:   45-block  5
    $$$$$:   45-block  6
    $$$$$:   45-block  7
    $$$$$:   45-block  8
    $$$$$:   45-block  9
    $$$$$:   45-block 10
    $$$$$:   45-block 11
    $$$$$:   45-block 12
    $$$$$:   45-block 13
        1:   46:}
    $$$$$:   46-block  0
    $$$$$:   46-block  1
    $$$$$:   46-block  2
    $$$$$:   46-block  3
        1:   46-block  4
    $$$$$:   46-block  5
        -:   47:
        7:   48:TEST(toroideValidoTEST, CincoXCuatro) {
        1:   48-block  0
        1:   48-block  1
        1:   48-block  2
        1:   48-block  3
        1:   48-block  4
        1:   48-block  5
        1:   48-block  6
    $$$$$:   48-block  7
    $$$$$:   48-block  8
    $$$$$:   48-block  9
    $$$$$:   48-block 10
    $$$$$:   48-block 11
    $$$$$:   48-block 12
        1:   48-block 13
        1:   48-block 14
        1:   48-block 15
        1:   48-block 16
        1:   48-block 17
        1:   48-block 18
        1:   48-block 19
        1:   48-block 20
        5:   49:    toroide t = { {true, false, false,false},
        1:   49-block  0
        1:   49-block  1
        1:   49-block  2
        5:   49-block  3
    $$$$$:   49-block  4
    $$$$$:   49-block  5
    $$$$$:   49-block  6
    $$$$$:   49-block  7
    $$$$$:   49-block  8
    $$$$$:   49-block  9
    $$$$$:   49-block 10
        1:   50:                  {false, true, false, false},
        1:   50-block  0
        1:   51:                  {false, false, true, false},
        1:   51-block  0
        1:   52:                  {false, false, true, false},
        1:   52-block  0
        1:   53:                  {false, true, false, false}
        1:   53-block  0
        -:   54:    };
        1:   55:    EXPECT_TRUE(toroideValido(t));
        1:   55-block  0
        1:   55-block  1
        1:   55-block  2
        1:   55-block  3
        1:   55-block  4
    $$$$$:   55-block  5
    $$$$$:   55-block  6
    $$$$$:   55-block  7
    $$$$$:   55-block  8
    $$$$$:   55-block  9
    $$$$$:   55-block 10
    $$$$$:   55-block 11
    $$$$$:   55-block 12
    $$$$$:   55-block 13
        1:   56:}
    $$$$$:   56-block  0
    $$$$$:   56-block  1
    $$$$$:   56-block  2
    $$$$$:   56-block  3
        1:   56-block  4
    $$$$$:   56-block  5
        -:   57:
        7:   58:TEST(toroideValidoTEST, FilaMenor) {
        1:   58-block  0
        1:   58-block  1
        1:   58-block  2
        1:   58-block  3
        1:   58-block  4
        1:   58-block  5
        1:   58-block  6
    $$$$$:   58-block  7
    $$$$$:   58-block  8
    $$$$$:   58-block  9
    $$$$$:   58-block 10
    $$$$$:   58-block 11
    $$$$$:   58-block 12
        1:   58-block 13
        1:   58-block 14
        1:   58-block 15
        1:   58-block 16
        1:   58-block 17
        1:   58-block 18
        1:   58-block 19
        1:   58-block 20
        5:   59:    toroide t = { {true, false, false,false},
        1:   59-block  0
        1:   59-block  1
        1:   59-block  2
        5:   59-block  3
    $$$$$:   59-block  4
    $$$$$:   59-block  5
    $$$$$:   59-block  6
    $$$$$:   59-block  7
    $$$$$:   59-block  8
    $$$$$:   59-block  9
    $$$$$:   59-block 10
        1:   60:                  {false, false},
        1:   60-block  0
        1:   61:                  {false, false, true, false},
        1:   61-block  0
        1:   62:                  {false, false, true, false},
        1:   62-block  0
        1:   63:                  {false, true, false, false}
        1:   63-block  0
        -:   64:    };
        1:   65:    EXPECT_FALSE(toroideValido(t));
        1:   65-block  0
        1:   65-block  1
        1:   65-block  2
        1:   65-block  3
        1:   65-block  4
    $$$$$:   65-block  5
    $$$$$:   65-block  6
    $$$$$:   65-block  7
    $$$$$:   65-block  8
    $$$$$:   65-block  9
    $$$$$:   65-block 10
    $$$$$:   65-block 11
    $$$$$:   65-block 12
    $$$$$:   65-block 13
        1:   66:}
    $$$$$:   66-block  0
    $$$$$:   66-block  1
    $$$$$:   66-block  2
    $$$$$:   66-block  3
        1:   66-block  4
    $$$$$:   66-block  5
        -:   67:
