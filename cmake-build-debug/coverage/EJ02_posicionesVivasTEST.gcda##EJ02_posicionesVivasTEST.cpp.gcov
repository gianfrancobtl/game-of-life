        -:    0:Source:/Users/gianbattolla/Documents/Año 2020 - Cs. de la computación/Algoritmos y Estructuras de Datos 1/Trabajo Practico de Implementación - Juego de la Vida-20201031/tpi_final/tests/EJ02_posicionesVivasTEST.cpp
        -:    0:Graph:/Users/gianbattolla/Documents/Año 2020 - Cs. de la computación/Algoritmos y Estructuras de Datos 1/Trabajo Practico de Implementación - Juego de la Vida-20201031/tpi_final/cmake-build-debug/CMakeFiles/juegoDeLaVida.dir/tests/EJ02_posicionesVivasTEST.gcno
        -:    0:Data:/Users/gianbattolla/Documents/Año 2020 - Cs. de la computación/Algoritmos y Estructuras de Datos 1/Trabajo Practico de Implementación - Juego de la Vida-20201031/tpi_final/cmake-build-debug/CMakeFiles/juegoDeLaVida.dir/tests/EJ02_posicionesVivasTEST.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "../ejercicios.h"
        -:    2:#include "../auxiliares.h"
        -:    3:#include "gtest/gtest.h"
        -:    4:#include <algorithm>
        -:    5:
        -:    6:using namespace std;
        -:    7:
        7:    8:TEST(posicionesVivasTEST, toroideDiagonalVivas){
        1:    8-block  0
        1:    8-block  1
        1:    8-block  2
        1:    8-block  3
        1:    8-block  4
        1:    8-block  5
        1:    8-block  6
    $$$$$:    8-block  7
    $$$$$:    8-block  8
    $$$$$:    8-block  9
    $$$$$:    8-block 10
    $$$$$:    8-block 11
    $$$$$:    8-block 12
        1:    8-block 13
        1:    8-block 14
        1:    8-block 15
        1:    8-block 16
        1:    8-block 17
        1:    8-block 18
        1:    8-block 19
        1:    8-block 20
        6:    9:    toroide t = { 
        1:    9-block  0
        1:    9-block  1
        6:    9-block  2
    $$$$$:    9-block  3
    $$$$$:    9-block  4
    $$$$$:    9-block  5
    $$$$$:    9-block  6
    $$$$$:    9-block  7
    $$$$$:    9-block  8
    $$$$$:    9-block  9
        1:   10:	{true, false, false},
        1:   10-block  0
        1:   11:	{false, true, false},
        1:   11-block  0
        1:   12:	{false, false, true},
        1:   12-block  0
        1:   13:	{true, false, false},
        1:   13-block  0
        1:   14:	{false, true, false},
        1:   14-block  0
        1:   15:	{false, false, true}};
        1:   15-block  0
        -:   16:
        1:   17:    vector<posicion> vivas = {mp(0,0), mp(1,1), mp(2,2), mp(3, 0), mp(4, 1), mp(5, 2)};
        1:   17-block  0
        1:   17-block  1
        1:   17-block  2
        1:   17-block  3
        1:   17-block  4
        1:   17-block  5
        1:   17-block  6
        1:   18:    vector<posicion> res = posicionesVivas(t);
        1:   18-block  0
        1:   19:    EXPECT_EQ(ordenar(vivas), ordenar(res));
        1:   19-block  0
        1:   19-block  1
        1:   19-block  2
        1:   19-block  3
        1:   19-block  4
        1:   19-block  5
    $$$$$:   19-block  6
    $$$$$:   19-block  7
    $$$$$:   19-block  8
    $$$$$:   19-block  9
    $$$$$:   19-block 10
    $$$$$:   19-block 11
    $$$$$:   19-block 12
    $$$$$:   19-block 13
    $$$$$:   19-block 14
    $$$$$:   19-block 15
        1:   20:}
    $$$$$:   20-block  0
    $$$$$:   20-block  1
    $$$$$:   20-block  2
    $$$$$:   20-block  3
    $$$$$:   20-block  4
    $$$$$:   20-block  5
        1:   20-block  6
    $$$$$:   20-block  7
    $$$$$:   20-block  8
    $$$$$:   20-block  9
        -:   21:
