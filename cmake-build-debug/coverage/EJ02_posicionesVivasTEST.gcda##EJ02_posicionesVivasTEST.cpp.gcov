        -:    0:Source:/Users/gianbattolla/Documents/Año 2020 - Cs. de la computación/Algoritmos y Estructuras de Datos 1/Trabajo Practico de Implementación - Juego de la Vida-20201031/tpi_final/tests/EJ02_posicionesVivasTEST.cpp
        -:    0:Graph:/Users/gianbattolla/Documents/Año 2020 - Cs. de la computación/Algoritmos y Estructuras de Datos 1/Trabajo Practico de Implementación - Juego de la Vida-20201031/tpi_final/cmake-build-debug/CMakeFiles/juegoDeLaVida.dir/tests/EJ02_posicionesVivasTEST.gcno
        -:    0:Data:/Users/gianbattolla/Documents/Año 2020 - Cs. de la computación/Algoritmos y Estructuras de Datos 1/Trabajo Practico de Implementación - Juego de la Vida-20201031/tpi_final/cmake-build-debug/CMakeFiles/juegoDeLaVida.dir/tests/EJ02_posicionesVivasTEST.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "../ejercicios.h"
        -:    2:#include "../auxiliares.h"
        -:    3:#include "gtest/gtest.h"
        -:    4:#include <algorithm>
        -:    5:
        -:    6:using namespace std;
        -:    7:
        7:    8:TEST(posicionesVivasTEST, toroideDiagonalVivas){
        1:    8-block  0
        1:    8-block  1
        1:    8-block  2
        1:    8-block  3
        1:    8-block  4
        1:    8-block  5
        1:    8-block  6
    $$$$$:    8-block  7
    $$$$$:    8-block  8
    $$$$$:    8-block  9
    $$$$$:    8-block 10
    $$$$$:    8-block 11
    $$$$$:    8-block 12
        1:    8-block 13
        1:    8-block 14
        1:    8-block 15
        1:    8-block 16
        1:    8-block 17
        1:    8-block 18
        1:    8-block 19
        1:    8-block 20
        6:    9:    toroide t = { 
        1:    9-block  0
        1:    9-block  1
        6:    9-block  2
    $$$$$:    9-block  3
    $$$$$:    9-block  4
    $$$$$:    9-block  5
    $$$$$:    9-block  6
    $$$$$:    9-block  7
    $$$$$:    9-block  8
    $$$$$:    9-block  9
        1:   10:	{true, false, false},
        1:   10-block  0
        1:   11:	{false, true, false},
        1:   11-block  0
        1:   12:	{false, false, true},
        1:   12-block  0
        1:   13:	{true, false, false},
        1:   13-block  0
        1:   14:	{false, true, false},
        1:   14-block  0
        1:   15:	{false, false, true}};
        1:   15-block  0
        -:   16:
        1:   17:    vector<posicion> vivas = {mp(0,0), mp(1,1), mp(2,2), mp(3, 0), mp(4, 1), mp(5, 2)};
        1:   17-block  0
        1:   17-block  1
        1:   17-block  2
        1:   17-block  3
        1:   17-block  4
        1:   17-block  5
        1:   17-block  6
        1:   18:    vector<posicion> res = posicionesVivas(t);
        1:   18-block  0
        1:   19:    EXPECT_EQ(ordenar(vivas), ordenar(res));
        1:   19-block  0
        1:   19-block  1
        1:   19-block  2
        1:   19-block  3
        1:   19-block  4
        1:   19-block  5
    $$$$$:   19-block  6
    $$$$$:   19-block  7
    $$$$$:   19-block  8
    $$$$$:   19-block  9
    $$$$$:   19-block 10
    $$$$$:   19-block 11
    $$$$$:   19-block 12
    $$$$$:   19-block 13
    $$$$$:   19-block 14
    $$$$$:   19-block 15
        1:   20:}
    $$$$$:   20-block  0
    $$$$$:   20-block  1
    $$$$$:   20-block  2
    $$$$$:   20-block  3
    $$$$$:   20-block  4
    $$$$$:   20-block  5
        1:   20-block  6
    $$$$$:   20-block  7
    $$$$$:   20-block  8
    $$$$$:   20-block  9
        -:   21:
        7:   22:TEST(posicionesVivasTEST, toroideMuerto){
        1:   22-block  0
        1:   22-block  1
        1:   22-block  2
        1:   22-block  3
        1:   22-block  4
        1:   22-block  5
        1:   22-block  6
    $$$$$:   22-block  7
    $$$$$:   22-block  8
    $$$$$:   22-block  9
    $$$$$:   22-block 10
    $$$$$:   22-block 11
    $$$$$:   22-block 12
        1:   22-block 13
        1:   22-block 14
        1:   22-block 15
        1:   22-block 16
        1:   22-block 17
        1:   22-block 18
        1:   22-block 19
        1:   22-block 20
        5:   23:    toroide t = {
        1:   23-block  0
        1:   23-block  1
        5:   23-block  2
    $$$$$:   23-block  3
    $$$$$:   23-block  4
    $$$$$:   23-block  5
    $$$$$:   23-block  6
    $$$$$:   23-block  7
    $$$$$:   23-block  8
    $$$$$:   23-block  9
        1:   24:            {false, false, false},
        1:   24-block  0
        1:   25:            {false, false, false},
        1:   25-block  0
        1:   26:            {false, false, false},
        1:   26-block  0
        1:   27:            {false, false, false},
        1:   27-block  0
        1:   28:            {false, false, false}};
        1:   28-block  0
        -:   29:
        1:   30:    vector<posicion> vivas = {};
        1:   31:    vector<posicion> res = posicionesVivas(t);
        1:   31-block  0
        1:   32:    EXPECT_EQ(ordenar(vivas), ordenar(res));
        1:   32-block  0
        1:   32-block  1
        1:   32-block  2
        1:   32-block  3
        1:   32-block  4
        1:   32-block  5
    $$$$$:   32-block  6
    $$$$$:   32-block  7
    $$$$$:   32-block  8
    $$$$$:   32-block  9
    $$$$$:   32-block 10
    $$$$$:   32-block 11
    $$$$$:   32-block 12
    $$$$$:   32-block 13
    $$$$$:   32-block 14
    $$$$$:   32-block 15
        1:   33:}
    $$$$$:   33-block  0
    $$$$$:   33-block  1
    $$$$$:   33-block  2
    $$$$$:   33-block  3
    $$$$$:   33-block  4
        1:   33-block  5
    $$$$$:   33-block  6
    $$$$$:   33-block  7
        -:   34:
        -:   35:
        7:   36:TEST(posicionesVivasTEST, toroideVivoCompletamente){
        1:   36-block  0
        1:   36-block  1
        1:   36-block  2
        1:   36-block  3
        1:   36-block  4
        1:   36-block  5
        1:   36-block  6
    $$$$$:   36-block  7
    $$$$$:   36-block  8
    $$$$$:   36-block  9
    $$$$$:   36-block 10
    $$$$$:   36-block 11
    $$$$$:   36-block 12
        1:   36-block 13
        1:   36-block 14
        1:   36-block 15
        1:   36-block 16
        1:   36-block 17
        1:   36-block 18
        1:   36-block 19
        1:   36-block 20
        3:   37:    toroide t = {
        1:   37-block  0
        1:   37-block  1
        3:   37-block  2
    $$$$$:   37-block  3
    $$$$$:   37-block  4
    $$$$$:   37-block  5
    $$$$$:   37-block  6
    $$$$$:   37-block  7
    $$$$$:   37-block  8
    $$$$$:   37-block  9
        1:   38:            {true, true, true},
        1:   38-block  0
        1:   39:            {true, true, true},
        1:   39-block  0
        1:   40:            {true, true, true}};
        1:   40-block  0
        -:   41:
        1:   42:    vector<posicion> vivas = {mp(0,0), mp(0,1), mp(0,2),mp(1,0),mp(1,1),mp(1,2),mp(2,0),mp(2,1),mp(2, 2)};
        1:   42-block  0
        1:   42-block  1
        1:   42-block  2
        1:   42-block  3
        1:   42-block  4
        1:   42-block  5
        1:   42-block  6
        1:   42-block  7
        1:   42-block  8
        1:   42-block  9
        1:   43:    vector<posicion> res = posicionesVivas(t);
        1:   43-block  0
        1:   44:    EXPECT_EQ(ordenar(vivas), ordenar(res));
        1:   44-block  0
        1:   44-block  1
        1:   44-block  2
        1:   44-block  3
        1:   44-block  4
        1:   44-block  5
    $$$$$:   44-block  6
    $$$$$:   44-block  7
    $$$$$:   44-block  8
    $$$$$:   44-block  9
    $$$$$:   44-block 10
    $$$$$:   44-block 11
    $$$$$:   44-block 12
    $$$$$:   44-block 13
    $$$$$:   44-block 14
    $$$$$:   44-block 15
        1:   45:}
    $$$$$:   45-block  0
    $$$$$:   45-block  1
    $$$$$:   45-block  2
    $$$$$:   45-block  3
    $$$$$:   45-block  4
    $$$$$:   45-block  5
        1:   45-block  6
    $$$$$:   45-block  7
    $$$$$:   45-block  8
    $$$$$:   45-block  9
        -:   46:
        7:   47:TEST(posicionesVivasTEST, vivasLasPuntas){
        1:   47-block  0
        1:   47-block  1
        1:   47-block  2
        1:   47-block  3
        1:   47-block  4
        1:   47-block  5
        1:   47-block  6
    $$$$$:   47-block  7
    $$$$$:   47-block  8
    $$$$$:   47-block  9
    $$$$$:   47-block 10
    $$$$$:   47-block 11
    $$$$$:   47-block 12
        1:   47-block 13
        1:   47-block 14
        1:   47-block 15
        1:   47-block 16
        1:   47-block 17
        1:   47-block 18
        1:   47-block 19
        1:   47-block 20
        6:   48:    toroide t = {
        1:   48-block  0
        1:   48-block  1
        6:   48-block  2
    $$$$$:   48-block  3
    $$$$$:   48-block  4
    $$$$$:   48-block  5
    $$$$$:   48-block  6
    $$$$$:   48-block  7
    $$$$$:   48-block  8
    $$$$$:   48-block  9
        1:   49:            {true,  false, false},
        1:   49-block  0
        1:   50:            {false, false, false},
        1:   50-block  0
        1:   51:            {false, false, false},
        1:   51-block  0
        1:   52:            {false, false, false},
        1:   52-block  0
        1:   53:            {false, false, false},
        1:   53-block  0
        1:   54:            {false, false, true}};
        1:   54-block  0
        -:   55:
        1:   56:    vector<posicion> vivas = {mp(0,0), mp(5,2)};
        1:   56-block  0
        1:   56-block  1
        1:   56-block  2
        1:   57:    vector<posicion> res = posicionesVivas(t);
        1:   57-block  0
        1:   58:    EXPECT_EQ(ordenar(vivas), ordenar(res));
        1:   58-block  0
        1:   58-block  1
        1:   58-block  2
        1:   58-block  3
        1:   58-block  4
        1:   58-block  5
    $$$$$:   58-block  6
    $$$$$:   58-block  7
    $$$$$:   58-block  8
    $$$$$:   58-block  9
    $$$$$:   58-block 10
    $$$$$:   58-block 11
    $$$$$:   58-block 12
    $$$$$:   58-block 13
    $$$$$:   58-block 14
    $$$$$:   58-block 15
        1:   59:}
    $$$$$:   59-block  0
    $$$$$:   59-block  1
    $$$$$:   59-block  2
    $$$$$:   59-block  3
    $$$$$:   59-block  4
    $$$$$:   59-block  5
        1:   59-block  6
    $$$$$:   59-block  7
    $$$$$:   59-block  8
    $$$$$:   59-block  9
