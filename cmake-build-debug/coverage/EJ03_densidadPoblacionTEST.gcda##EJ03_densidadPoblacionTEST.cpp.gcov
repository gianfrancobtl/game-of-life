        -:    0:Source:/Users/gianbattolla/Documents/Año 2020 - Cs. de la computación/Algoritmos y Estructuras de Datos 1/Trabajo Practico de Implementación - Juego de la Vida-20201031/tpi_final/tests/EJ03_densidadPoblacionTEST.cpp
        -:    0:Graph:/Users/gianbattolla/Documents/Año 2020 - Cs. de la computación/Algoritmos y Estructuras de Datos 1/Trabajo Practico de Implementación - Juego de la Vida-20201031/tpi_final/cmake-build-debug/CMakeFiles/juegoDeLaVida.dir/tests/EJ03_densidadPoblacionTEST.gcno
        -:    0:Data:/Users/gianbattolla/Documents/Año 2020 - Cs. de la computación/Algoritmos y Estructuras de Datos 1/Trabajo Practico de Implementación - Juego de la Vida-20201031/tpi_final/cmake-build-debug/CMakeFiles/juegoDeLaVida.dir/tests/EJ03_densidadPoblacionTEST.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "../ejercicios.h"
        -:    2:#include "gtest/gtest.h"
        -:    3:
        -:    4:using namespace std;
        -:    5:
        7:    6:TEST(densidadPoblacionTEST, toroideDiagonal){
        1:    6-block  0
        1:    6-block  1
        1:    6-block  2
        1:    6-block  3
        1:    6-block  4
        1:    6-block  5
        1:    6-block  6
    $$$$$:    6-block  7
    $$$$$:    6-block  8
    $$$$$:    6-block  9
    $$$$$:    6-block 10
    $$$$$:    6-block 11
    $$$$$:    6-block 12
        1:    6-block 13
        1:    6-block 14
        1:    6-block 15
        1:    6-block 16
        1:    6-block 17
        1:    6-block 18
        1:    6-block 19
        1:    6-block 20
        1:    7:    vector<bool> a = { true, true, true, true };
        5:    8:    toroide t = { a, a, a, a, a };
        1:    8-block  0
        1:    8-block  1
        1:    8-block  2
        1:    8-block  3
        1:    8-block  4
        1:    8-block  5
        1:    8-block  6
        5:    8-block  7
    $$$$$:    8-block  8
    $$$$$:    8-block  9
    $$$$$:    8-block 10
    $$$$$:    8-block 11
    $$$$$:    8-block 12
    $$$$$:    8-block 13
        1:    9:    EXPECT_NEAR(densidadPoblacion(t), 1.0, 0.01);
        1:    9-block  0
        1:    9-block  1
        1:    9-block  2
        1:    9-block  3
        1:    9-block  4
    $$$$$:    9-block  5
    $$$$$:    9-block  6
    $$$$$:    9-block  7
    $$$$$:    9-block  8
    $$$$$:    9-block  9
    $$$$$:    9-block 10
    $$$$$:    9-block 11
    $$$$$:    9-block 12
        1:   10:}
    $$$$$:   10-block  0
    $$$$$:   10-block  1
    $$$$$:   10-block  2
        1:   10-block  3
    $$$$$:   10-block  4
    $$$$$:   10-block  5
    $$$$$:   10-block  6
        -:   11:
        7:   12:TEST(densidadPoblacionTEST, toroideNormal){
        1:   12-block  0
        1:   12-block  1
        1:   12-block  2
        1:   12-block  3
        1:   12-block  4
        1:   12-block  5
        1:   12-block  6
    $$$$$:   12-block  7
    $$$$$:   12-block  8
    $$$$$:   12-block  9
    $$$$$:   12-block 10
    $$$$$:   12-block 11
    $$$$$:   12-block 12
        1:   12-block 13
        1:   12-block 14
        1:   12-block 15
        1:   12-block 16
        1:   12-block 17
        1:   12-block 18
        1:   12-block 19
        1:   12-block 20
        1:   13:    vector<bool> a = { false, true, false, true };
        1:   14:    vector<bool> b = { false, true, false, true };
        1:   14-block  0
        1:   15:    vector<bool> c = { false, true, false, true };
        1:   15-block  0
        3:   16:    toroide t = { a, b, c };
        1:   16-block  0
        1:   16-block  1
        1:   16-block  2
        1:   16-block  3
        1:   16-block  4
        3:   16-block  5
    $$$$$:   16-block  6
    $$$$$:   16-block  7
    $$$$$:   16-block  8
    $$$$$:   16-block  9
    $$$$$:   16-block 10
    $$$$$:   16-block 11
        1:   17:    EXPECT_NEAR(densidadPoblacion(t), 0.5, 0.01);
        1:   17-block  0
        1:   17-block  1
        1:   17-block  2
        1:   17-block  3
        1:   17-block  4
    $$$$$:   17-block  5
    $$$$$:   17-block  6
    $$$$$:   17-block  7
    $$$$$:   17-block  8
    $$$$$:   17-block  9
    $$$$$:   17-block 10
    $$$$$:   17-block 11
    $$$$$:   17-block 12
        1:   18:}
    $$$$$:   18-block  0
    $$$$$:   18-block  1
    $$$$$:   18-block  2
    $$$$$:   18-block  3
    $$$$$:   18-block  4
        1:   18-block  5
    $$$$$:   18-block  6
    $$$$$:   18-block  7
    $$$$$:   18-block  8
    $$$$$:   18-block  9
    $$$$$:   18-block 10
        -:   19:
        7:   20:TEST(densidadPoblacionTEST, toroideMuerto){
        1:   20-block  0
        1:   20-block  1
        1:   20-block  2
        1:   20-block  3
        1:   20-block  4
        1:   20-block  5
        1:   20-block  6
    $$$$$:   20-block  7
    $$$$$:   20-block  8
    $$$$$:   20-block  9
    $$$$$:   20-block 10
    $$$$$:   20-block 11
    $$$$$:   20-block 12
        1:   20-block 13
        1:   20-block 14
        1:   20-block 15
        1:   20-block 16
        1:   20-block 17
        1:   20-block 18
        1:   20-block 19
        1:   20-block 20
        1:   21:    vector<bool> a = { false, false, false, false };
        1:   22:    vector<bool> b = { false, false, false, false };
        1:   22-block  0
        1:   23:    vector<bool> c = { false, false, false, false };
        1:   23-block  0
        3:   24:    toroide t = { a, b, c };
        1:   24-block  0
        1:   24-block  1
        1:   24-block  2
        1:   24-block  3
        1:   24-block  4
        3:   24-block  5
    $$$$$:   24-block  6
    $$$$$:   24-block  7
    $$$$$:   24-block  8
    $$$$$:   24-block  9
    $$$$$:   24-block 10
    $$$$$:   24-block 11
        1:   25:    EXPECT_NEAR(densidadPoblacion(t), 0, 0.01);
        1:   25-block  0
        1:   25-block  1
        1:   25-block  2
        1:   25-block  3
        1:   25-block  4
    $$$$$:   25-block  5
    $$$$$:   25-block  6
    $$$$$:   25-block  7
    $$$$$:   25-block  8
    $$$$$:   25-block  9
    $$$$$:   25-block 10
    $$$$$:   25-block 11
    $$$$$:   25-block 12
        1:   26:}
    $$$$$:   26-block  0
    $$$$$:   26-block  1
    $$$$$:   26-block  2
    $$$$$:   26-block  3
    $$$$$:   26-block  4
        1:   26-block  5
    $$$$$:   26-block  6
    $$$$$:   26-block  7
    $$$$$:   26-block  8
    $$$$$:   26-block  9
    $$$$$:   26-block 10
        -:   27:
        7:   28:TEST(densidadPoblacionTEST, unaViva){
        1:   28-block  0
        1:   28-block  1
        1:   28-block  2
        1:   28-block  3
        1:   28-block  4
        1:   28-block  5
        1:   28-block  6
    $$$$$:   28-block  7
    $$$$$:   28-block  8
    $$$$$:   28-block  9
    $$$$$:   28-block 10
    $$$$$:   28-block 11
    $$$$$:   28-block 12
        1:   28-block 13
        1:   28-block 14
        1:   28-block 15
        1:   28-block 16
        1:   28-block 17
        1:   28-block 18
        1:   28-block 19
        1:   28-block 20
        1:   29:    vector<bool> a = { false, false, false, false };
        1:   30:    vector<bool> b = { false, false, false, false };
        1:   30-block  0
        1:   31:    vector<bool> c = { false, false, false, false };
        1:   31-block  0
        1:   32:    vector<bool> d = { false, false, false, false };
        1:   32-block  0
        1:   33:    vector<bool> e = { false, false, false, true };
        1:   33-block  0
        5:   34:    toroide t = { a, b, c, d, e };
        1:   34-block  0
        1:   34-block  1
        1:   34-block  2
        1:   34-block  3
        1:   34-block  4
        1:   34-block  5
        1:   34-block  6
        5:   34-block  7
    $$$$$:   34-block  8
    $$$$$:   34-block  9
    $$$$$:   34-block 10
    $$$$$:   34-block 11
    $$$$$:   34-block 12
    $$$$$:   34-block 13
        1:   35:    EXPECT_NEAR(densidadPoblacion(t), 0.05, 0.01);
        1:   35-block  0
        1:   35-block  1
        1:   35-block  2
        1:   35-block  3
        1:   35-block  4
    $$$$$:   35-block  5
    $$$$$:   35-block  6
    $$$$$:   35-block  7
    $$$$$:   35-block  8
    $$$$$:   35-block  9
    $$$$$:   35-block 10
    $$$$$:   35-block 11
    $$$$$:   35-block 12
        1:   36:}
    $$$$$:   36-block  0
    $$$$$:   36-block  1
    $$$$$:   36-block  2
    $$$$$:   36-block  3
    $$$$$:   36-block  4
    $$$$$:   36-block  5
    $$$$$:   36-block  6
        1:   36-block  7
    $$$$$:   36-block  8
    $$$$$:   36-block  9
    $$$$$:   36-block 10
    $$$$$:   36-block 11
    $$$$$:   36-block 12
    $$$$$:   36-block 13
    $$$$$:   36-block 14
