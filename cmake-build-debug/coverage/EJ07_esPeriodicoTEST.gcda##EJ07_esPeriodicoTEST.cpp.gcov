        -:    0:Source:/Users/gianbattolla/Documents/Año 2020 - Cs. de la computación/Algoritmos y Estructuras de Datos 1/Trabajo Practico de Implementación - Juego de la Vida-20201031/tpi_final/tests/EJ07_esPeriodicoTEST.cpp
        -:    0:Graph:/Users/gianbattolla/Documents/Año 2020 - Cs. de la computación/Algoritmos y Estructuras de Datos 1/Trabajo Practico de Implementación - Juego de la Vida-20201031/tpi_final/cmake-build-debug/CMakeFiles/juegoDeLaVida.dir/tests/EJ07_esPeriodicoTEST.gcno
        -:    0:Data:/Users/gianbattolla/Documents/Año 2020 - Cs. de la computación/Algoritmos y Estructuras de Datos 1/Trabajo Practico de Implementación - Juego de la Vida-20201031/tpi_final/cmake-build-debug/CMakeFiles/juegoDeLaVida.dir/tests/EJ07_esPeriodicoTEST.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "../ejercicios.h"
        -:    2:#include "gtest/gtest.h"
        -:    3:#include <algorithm>
        -:    4:
        -:    5:using namespace std;
        -:    6:
        7:    7:TEST(esPeriodicoTEST, toroideHorizontalPeriodico2){
        1:    7-block  0
        1:    7-block  1
        1:    7-block  2
        1:    7-block  3
        1:    7-block  4
        1:    7-block  5
        1:    7-block  6
    $$$$$:    7-block  7
    $$$$$:    7-block  8
    $$$$$:    7-block  9
    $$$$$:    7-block 10
    $$$$$:    7-block 11
    $$$$$:    7-block 12
        1:    7-block 13
        1:    7-block 14
        1:    7-block 15
        1:    7-block 16
        1:    7-block 17
        1:    7-block 18
        1:    7-block 19
        1:    7-block 20
        5:    8:    toroide t = { 
        1:    8-block  0
        1:    8-block  1
        5:    8-block  2
    $$$$$:    8-block  3
    $$$$$:    8-block  4
    $$$$$:    8-block  5
    $$$$$:    8-block  6
    $$$$$:    8-block  7
    $$$$$:    8-block  8
    $$$$$:    8-block  9
        1:    9:                  {false, false, false, false, false}, 
        1:    9-block  0
        1:   10:                  {false, false, false, false, false}, 
        1:   10-block  0
        1:   11:                  {false, true, true, true, false},
        1:   11-block  0
        1:   12:                  {false, false, false, false, false}, 
        1:   12-block  0
        1:   13:                  {false, false,false, false, false} };
        1:   13-block  0
        -:   14:    int p;
        1:   15:    bool res = esPeriodico(t, p);
        1:   15-block  0
        1:   16:    EXPECT_TRUE(res);
        1:   16-block  0
        1:   16-block  1
        1:   16-block  2
        1:   16-block  3
    $$$$$:   16-block  4
    $$$$$:   16-block  5
    $$$$$:   16-block  6
    $$$$$:   16-block  7
    $$$$$:   16-block  8
    $$$$$:   16-block  9
    $$$$$:   16-block 10
    $$$$$:   16-block 11
    $$$$$:   16-block 12
        1:   17:    EXPECT_EQ(p, 2);
        1:   17-block  0
        1:   17-block  1
        1:   17-block  2
        1:   17-block  3
    $$$$$:   17-block  4
    $$$$$:   17-block  5
    $$$$$:   17-block  6
    $$$$$:   17-block  7
    $$$$$:   17-block  8
    $$$$$:   17-block  9
    $$$$$:   17-block 10
    $$$$$:   17-block 11
        1:   18:}
    $$$$$:   18-block  0
    $$$$$:   18-block  1
    $$$$$:   18-block  2
    $$$$$:   18-block  3
    $$$$$:   18-block  4
    $$$$$:   18-block  5
        1:   18-block  6
    $$$$$:   18-block  7
        -:   19:
        7:   20:TEST(esPeriodicoTEST, cuadrado){
        1:   20-block  0
        1:   20-block  1
        1:   20-block  2
        1:   20-block  3
        1:   20-block  4
        1:   20-block  5
        1:   20-block  6
    $$$$$:   20-block  7
    $$$$$:   20-block  8
    $$$$$:   20-block  9
    $$$$$:   20-block 10
    $$$$$:   20-block 11
    $$$$$:   20-block 12
        1:   20-block 13
        1:   20-block 14
        1:   20-block 15
        1:   20-block 16
        1:   20-block 17
        1:   20-block 18
        1:   20-block 19
        1:   20-block 20
        5:   21:    toroide t = {
        1:   21-block  0
        1:   21-block  1
        5:   21-block  2
    $$$$$:   21-block  3
    $$$$$:   21-block  4
    $$$$$:   21-block  5
    $$$$$:   21-block  6
    $$$$$:   21-block  7
    $$$$$:   21-block  8
    $$$$$:   21-block  9
        1:   22:            {false, false, false, false, false},
        1:   22-block  0
        1:   23:            {false, false, true, true, false},
        1:   23-block  0
        1:   24:            {false, false, true, true, false},
        1:   24-block  0
        1:   25:            {false, false, false, false, false},
        1:   25-block  0
        1:   26:            {false, false, false, false, false} };
        1:   26-block  0
        -:   27:    int p;
        1:   28:    bool res = esPeriodico(t, p);
        1:   28-block  0
        1:   29:    EXPECT_TRUE(res);
        1:   29-block  0
        1:   29-block  1
        1:   29-block  2
        1:   29-block  3
    $$$$$:   29-block  4
    $$$$$:   29-block  5
    $$$$$:   29-block  6
    $$$$$:   29-block  7
    $$$$$:   29-block  8
    $$$$$:   29-block  9
    $$$$$:   29-block 10
    $$$$$:   29-block 11
    $$$$$:   29-block 12
        1:   30:    EXPECT_EQ(p, 1);
        1:   30-block  0
        1:   30-block  1
        1:   30-block  2
        1:   30-block  3
    $$$$$:   30-block  4
    $$$$$:   30-block  5
    $$$$$:   30-block  6
    $$$$$:   30-block  7
    $$$$$:   30-block  8
    $$$$$:   30-block  9
    $$$$$:   30-block 10
    $$$$$:   30-block 11
        1:   31:}
    $$$$$:   31-block  0
    $$$$$:   31-block  1
    $$$$$:   31-block  2
    $$$$$:   31-block  3
    $$$$$:   31-block  4
    $$$$$:   31-block  5
        1:   31-block  6
    $$$$$:   31-block  7
        -:   32:
        7:   33:TEST(esPeriodicoTEST, dimensionesGrandes){
        1:   33-block  0
        1:   33-block  1
        1:   33-block  2
        1:   33-block  3
        1:   33-block  4
        1:   33-block  5
        1:   33-block  6
    $$$$$:   33-block  7
    $$$$$:   33-block  8
    $$$$$:   33-block  9
    $$$$$:   33-block 10
    $$$$$:   33-block 11
    $$$$$:   33-block 12
        1:   33-block 13
        1:   33-block 14
        1:   33-block 15
        1:   33-block 16
        1:   33-block 17
        1:   33-block 18
        1:   33-block 19
        1:   33-block 20
       11:   34:    toroide t = {
        1:   34-block  0
        1:   34-block  1
       11:   34-block  2
    $$$$$:   34-block  3
    $$$$$:   34-block  4
    $$$$$:   34-block  5
    $$$$$:   34-block  6
    $$$$$:   34-block  7
    $$$$$:   34-block  8
    $$$$$:   34-block  9
        1:   35:            {false, false,false, false, false, false, false, false, false, false, false},
        1:   35-block  0
        1:   36:            {false, false, false, false, false, true, false, false, false, false, false},
        1:   36-block  0
        1:   37:            {false, false, false, false, false, true, false, false, false, false, false},
        1:   37-block  0
        1:   38:            {false, false, false, false, false, true, false, false, false, false, false},
        1:   38-block  0
        1:   39:            {false, false, false, false, false, false, false, false, false, false, false},
        1:   39-block  0
        1:   40:            {false, true,  true, true, false, false, false, true, true, true, false},
        1:   40-block  0
        1:   41:            {false, false, false, false, false, false, false, false, false, false, false},
        1:   41-block  0
        1:   42:            {false, false, false, false, false, true, false, false, false, false, false},
        1:   42-block  0
        1:   43:            {false, false, false, false, false, true, false, false, false, false, false},
        1:   43-block  0
        1:   44:            {false, false, false, false, false, true, false, false, false, false, false},
        1:   44-block  0
        1:   45:            {false, false, false, false, false, false ,false, false, false, false, false}
        1:   45-block  0
        -:   46:    };
        -:   47:    int p;
        1:   48:    bool res = esPeriodico(t, p);
        1:   48-block  0
        1:   49:    EXPECT_TRUE(res);
        1:   49-block  0
        1:   49-block  1
        1:   49-block  2
        1:   49-block  3
    $$$$$:   49-block  4
    $$$$$:   49-block  5
    $$$$$:   49-block  6
    $$$$$:   49-block  7
    $$$$$:   49-block  8
    $$$$$:   49-block  9
    $$$$$:   49-block 10
    $$$$$:   49-block 11
    $$$$$:   49-block 12
        1:   50:    EXPECT_EQ(p, 2);
        1:   50-block  0
        1:   50-block  1
        1:   50-block  2
        1:   50-block  3
    $$$$$:   50-block  4
    $$$$$:   50-block  5
    $$$$$:   50-block  6
    $$$$$:   50-block  7
    $$$$$:   50-block  8
    $$$$$:   50-block  9
    $$$$$:   50-block 10
    $$$$$:   50-block 11
        1:   51:}
    $$$$$:   51-block  0
    $$$$$:   51-block  1
    $$$$$:   51-block  2
    $$$$$:   51-block  3
    $$$$$:   51-block  4
    $$$$$:   51-block  5
        1:   51-block  6
    $$$$$:   51-block  7
        -:   52:
        7:   53:TEST(esPeriodicoTEST, toroideMuere){
        1:   53-block  0
        1:   53-block  1
        1:   53-block  2
        1:   53-block  3
        1:   53-block  4
        1:   53-block  5
        1:   53-block  6
    $$$$$:   53-block  7
    $$$$$:   53-block  8
    $$$$$:   53-block  9
    $$$$$:   53-block 10
    $$$$$:   53-block 11
    $$$$$:   53-block 12
        1:   53-block 13
        1:   53-block 14
        1:   53-block 15
        1:   53-block 16
        1:   53-block 17
        1:   53-block 18
        1:   53-block 19
        1:   53-block 20
        5:   54:    toroide t = {
        1:   54-block  0
        1:   54-block  1
        5:   54-block  2
    $$$$$:   54-block  3
    $$$$$:   54-block  4
    $$$$$:   54-block  5
    $$$$$:   54-block  6
    $$$$$:   54-block  7
    $$$$$:   54-block  8
    $$$$$:   54-block  9
        1:   55:            {false, false, false, false, false},
        1:   55-block  0
        1:   56:            {false, false, true, false, false},
        1:   56-block  0
        1:   57:            {false, false, false, true, false},
        1:   57-block  0
        1:   58:            {false, false, false, false, false},
        1:   58-block  0
        1:   59:            {false, false, false, false, false}
        1:   59-block  0
        -:   60:    };
        1:   61:    int p = 1000;
        1:   62:    bool res = esPeriodico(t, p);
        1:   62-block  0
        1:   63:    EXPECT_FALSE(res);
        1:   63-block  0
        1:   63-block  1
        1:   63-block  2
        1:   63-block  3
    $$$$$:   63-block  4
    $$$$$:   63-block  5
    $$$$$:   63-block  6
    $$$$$:   63-block  7
    $$$$$:   63-block  8
    $$$$$:   63-block  9
    $$$$$:   63-block 10
    $$$$$:   63-block 11
    $$$$$:   63-block 12
        1:   64:    EXPECT_EQ(p, 1000);
        1:   64-block  0
        1:   64-block  1
        1:   64-block  2
        1:   64-block  3
    $$$$$:   64-block  4
    $$$$$:   64-block  5
    $$$$$:   64-block  6
    $$$$$:   64-block  7
    $$$$$:   64-block  8
    $$$$$:   64-block  9
    $$$$$:   64-block 10
    $$$$$:   64-block 11
        1:   65:}
    $$$$$:   65-block  0
    $$$$$:   65-block  1
    $$$$$:   65-block  2
    $$$$$:   65-block  3
    $$$$$:   65-block  4
    $$$$$:   65-block  5
        1:   65-block  6
    $$$$$:   65-block  7
        -:   66:
        7:   67:TEST(esPeriodicoTEST, toroideMuereEnMasDeUnTick){
        1:   67-block  0
        1:   67-block  1
        1:   67-block  2
        1:   67-block  3
        1:   67-block  4
        1:   67-block  5
        1:   67-block  6
    $$$$$:   67-block  7
    $$$$$:   67-block  8
    $$$$$:   67-block  9
    $$$$$:   67-block 10
    $$$$$:   67-block 11
    $$$$$:   67-block 12
        1:   67-block 13
        1:   67-block 14
        1:   67-block 15
        1:   67-block 16
        1:   67-block 17
        1:   67-block 18
        1:   67-block 19
        1:   67-block 20
       11:   68:    toroide t = {
        1:   68-block  0
        1:   68-block  1
       11:   68-block  2
    $$$$$:   68-block  3
    $$$$$:   68-block  4
    $$$$$:   68-block  5
    $$$$$:   68-block  6
    $$$$$:   68-block  7
    $$$$$:   68-block  8
    $$$$$:   68-block  9
        1:   69:            {false, false, false, false, false, false, false, false, false, false, false, false},
        1:   69-block  0
        1:   70:            {false, false, false, false, false, false, false, false, false, false, false, false},
        1:   70-block  0
        1:   71:            {false, false, false, false, true, false, true, false, false, false, false, false},
        1:   71-block  0
        1:   72:            {false, false, false, false, true, false, true, false, false, false, false, false},
        1:   72-block  0
        1:   73:            {false, false, false, false, true, true, false, false, false, false, false, false},
        1:   73-block  0
        1:   74:            {false, false, false, false, false, false, false, false, false, false, false, false},
        1:   74-block  0
        1:   75:            {false, false, false, false, false, false, false, false, false, false, false, false},
        1:   75-block  0
        1:   76:            {false, false, false, false, false, false, false, false, false, false, false, false},
        1:   76-block  0
        1:   77:            {false, false, false, false, false, false, false, false, false, false, false, false},
        1:   77-block  0
        1:   78:            {false, false, false, false, false, false, false, false, false, false, false, false},
        1:   78-block  0
        1:   79:            {false, false, false, false, false, false, false, false, false, false, false, false}
        1:   79-block  0
        -:   80:    };
        1:   81:    int p = 9;
        1:   82:    bool res = esPeriodico(t, p);
        1:   82-block  0
        1:   83:    EXPECT_FALSE(res);
        1:   83-block  0
        1:   83-block  1
        1:   83-block  2
        1:   83-block  3
    $$$$$:   83-block  4
    $$$$$:   83-block  5
    $$$$$:   83-block  6
    $$$$$:   83-block  7
    $$$$$:   83-block  8
    $$$$$:   83-block  9
    $$$$$:   83-block 10
    $$$$$:   83-block 11
    $$$$$:   83-block 12
        1:   84:    EXPECT_EQ(p, 9);
        1:   84-block  0
        1:   84-block  1
        1:   84-block  2
        1:   84-block  3
    $$$$$:   84-block  4
    $$$$$:   84-block  5
    $$$$$:   84-block  6
    $$$$$:   84-block  7
    $$$$$:   84-block  8
    $$$$$:   84-block  9
    $$$$$:   84-block 10
    $$$$$:   84-block 11
        1:   85:}
    $$$$$:   85-block  0
    $$$$$:   85-block  1
    $$$$$:   85-block  2
    $$$$$:   85-block  3
    $$$$$:   85-block  4
    $$$$$:   85-block  5
        1:   85-block  6
    $$$$$:   85-block  7
        -:   86:
